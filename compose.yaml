services:
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  bot:
    build: 
      dockerfile: docker/bot.dockerfile
    volumes:
      - ./bot:/app

  api:
    build: 
      dockerfile: docker/api.dockerfile
    ports:
      - "5000:8080"
    volumes:
      - ./api/src:/app/src

  app:
    build:
      dockerfile: docker/web.dockerfile
    ports:
      - "3000:8080"
    volumes:
      - ./app/src:/app/src
      - ./app/public:/app/public
      - ./app/index.html:/app/index.html
      - ./app/vite.config.ts:/app/vite.config.ts
      - ./app/tsconfig.json:/app/tsconfig.json
      - ./app/tsconfig.node.json:/app/tsconfig.node.json
      - ./app/tsconfig.app.json:/app/tsconfig.app.json
      - ./app/package.json:/app/package.json
      - ./app/package-lock.json:/app/package-lock.json

  admin:
    build: 
      dockerfile: docker/admin.dockerfile
    volumes:
      - ./admin:/app
      - ./db/migrations:/db/migrations
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    working_dir: /app
    entrypoint: ["python"]

volumes:
  postgres-data: